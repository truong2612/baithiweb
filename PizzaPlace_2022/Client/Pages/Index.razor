@page "/"
@using PizzaPlace_2022.Shared
@inject IMenuService MenuService
@inject IOrderService orderService

<!-- Menu -->
<PizzaList Title="Các sản phảm bán chạy"
    Items="@State.Menu.Pizzas"
    ButtonTitle="Order"
    ButtonClass="btn btn-success pl-4 pr-4" 
    Selected="@AddToBasket" />
<!-- End menu -->
<!-- Shopping Basket -->
<ShoppingBasket Orders="@State.Basket.Orders"
    GetPizzaFromId="@State.Menu.GetPizza"
    Selected="@RemoveFromBasket" />

<!-- End shopping basket -->
<!-- Customer entry -->
<CustomerEntry Title="Thông tin của bạn"
    @bind-Customer="@State.Basket.Customer"
    ButtonTitle="Nhập"
    ButtonClass="mx-auto w-25 btn btn-success"
    ValidSubmit="PlaceOrder" />>
<!-- End customer entry -->

@State.ToJson()
}
@*  else {
        <div class = "mx-auto text-center mb-3 mt-3">
        <div class="spinner-border text-danger" role="status">
          <span class="visually-hidden">Loanding...</span>
        
        </div>
        </div>
  }*@

@code {
    private State State { get; } = new State();

    protected override async Task OnInitializedAsync() {
        Menu menu = await MenuService.GetMenu();
        foreach (Pizza pizza in menu.Pizzas) {
            State.Menu.Add(pizza);
        }
    }

    //private string SpicinessImage(Spiciness spiciness)
    //    => $"images/{spiciness.ToString().ToLower()}.png";

    private void AddToBasket(Pizza pizza)
        => State.Basket.Add(pizza.Id);

    private void RemoveFromBasket(int pos)
        => State.Basket.RemoveAt(pos);

    /*private void PlaceOrder() {
        Console.WriteLine("Placing order");
    }*/
    private async Task PlaceOrder() {
        await orderService.PlaceOrder(State.Basket);
    }
  

    }
}
